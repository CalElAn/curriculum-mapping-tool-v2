import json

from django.shortcuts import render
from django.http import HttpResponse, JsonResponse
from django.template import loader
from django.views.decorators.http import require_GET
from inertia import inertia
from django.core.paginator import Paginator
from neomodel import Q
import json
from inertia.utils import InertiaJsonEncoder

from app.models import Topic, Course, relationship_levels


@inertia("Course/Form")
@require_GET
def form(request):
    request_filter = request.GET.get("filter")

    courses = (
        Course.nodes.filter(
            Q(number__icontains=request_filter) | Q(title__icontains=request_filter)
        )
        .order_by("number")
        .all()
    )

    paginator = Paginator(courses, 5)

    page_obj = paginator.page(request.GET.get("page", 1))

    return {
        "initialCourses": page_obj.object_list,
        "pageObj": {
            "hasPrevious": page_obj.has_previous,
            "previousPageNumber": (
                page_obj.previous_page_number if page_obj.has_previous() else None
            ),
            "hasNext": page_obj.has_next,
            "nextPageNumber": (
                page_obj.next_page_number if page_obj.has_next() else None
            ),
            "numPages": page_obj.paginator.num_pages,
            "currentPage": page_obj.number,
            "pageRange": list(paginator.page_range),
        },
        "allTopics": Topic.nodes.order_by("name").all(),
        "levels": relationship_levels,
    }
